# Serve nextJS app from a port through NGINX reverse proxy (HTTPS)
# Path: /etc/nginx/sites-available/default
# Default server configuration for HTTPS
# Inspired from: https://gist.github.com/ZaHuPro/2ecdb934a7362e979e3aa5a92b181153

server {
    server_name www.binarytreesviz.com binarytreesviz.com;

    # Serve any static assets with NGINX
    location /.next/static {
        alias /root/Binary-Trees/app/.next/static;
        add_header Cache-Control "public, max-age=3600, immutable";
    }

    location / {
        # reverse proxy for next server
        proxy_pass http://localhost:3000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        add_header Cache-Control "public, max-age=3600";
    }

    listen [::]:443 ssl ipv6only=on;
    listen 443 ssl default_server;

    # Update with your SSL files. This is certbot genrated SSL details
    # Steps to generate cerbot SSL https://certbot.eff.org/lets-encrypt/ubuntufocal-nginx
    ssl_certificate /etc/letsencrypt/live/binarytreesviz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/binarytreesviz.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

}

server {
    server_name api.binarytreesviz.com;

    location / {
        # reverse proxy for nest server
        proxy_pass http://localhost:5000;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
    }

    listen 443 ssl;
    listen [::]:443 ssl;

    ssl_certificate /etc/letsencrypt/live/binarytreesviz.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/binarytreesviz.com/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
}

server {
    if ($host = www.binarytreesviz.com) {
        return 301 https://$host$request_uri;
    }
    
    if ($host = api.binarytreesviz.com) {
        return 301 https://$host$request_uri;
    }

    if ($host = binarytreesviz.com) {
        return 301 https://$host$request_uri;
    }


    listen 80;
    listen [::]:80;
    server_name www.binarytreesviz.com binarytreesviz.com;
    return 301 https://$host$request_uri;
}